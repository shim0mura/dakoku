#!/usr/bin/env ruby

USAGE <<-HELP
  USAGE dakoku [options] what are you doing
  -h (--help)   show this help
  -l (--list)   show your journal of the selected day
  -a (--amend)  amend your journal of the selected line
  -c (--config) change reminder settings
HELP

unless ARGV
  puts "USAGE dakoku things what are you doing now"
  exit!
end

dakoku = Dakoku.new

case ARGV[0]
when "-h", "--help"
  puts USAGE
when "-l", "--list"
  dakoku.list
else
  dakoku.journal
end

$LOAD_PATH.unshift File.expand_path("../lib", File.dirname(__FILE__))
#require "dakoku"
#todo:保存ディレクトリはどうする？
#f = open "/home/shimomura/work/time-analytics/dakoku/" + Time.now.strftime("%Y%m%d") + ".dat", "a"
#
#f.write Time.now.to_s + "  " + doing + "\n"
#f.close

# Dakoku
# -Journal
# -Reminder
# (-API)
#

class Dakoku
  def initialize(arg)
    @doing = arg
    @f = nil
  end

  def set_file(filename = Time.now.strftime("%Y%m%d"))
    @f = open("/home/shimomura/work/time-analytics/dakoku/#{filename}.dat", "a")
  end

  def dakoku
    @f.write @doing
    @f.close
  end

  def list
    counter = 0
    lists = []
    #ディレクトリorline出力はupdateと同じ感じにできる？method切ったほうがいいかも
    while line = @f.read
      put "#{counter}: " + line
      lists.push(line)
    end
    puts "select number."
    while select = gets
      next unless select.valid_selector?
      #ディレクトリの出力
      puts lists[select]
      break
    end
  end
end

